
Comprobacion del funcionamiento de los sensores MLX90614 y MAX30100

Procedimiento para quienes si les funciona el ESP32CAM y el FTDI

- https://github.com/codigo-iot/Max30100-MQTT-ESP32CAM

- https://github.com/codigo-iot/MLX-90614-TallerIoT

-Agregar a la IDE de Arduino las siguientes bibliotecas con ayuda del gestor de bibliotecas_

-Agregar biblioteca Adafruit MLX90614 Library
-Agregar biblioteca SparkFun MAX3010x Pulse and Proximity Sensor Library

1. Clonar repositorios
2. Realizar la conexi贸n de acuerdo a la tabla de conexiones en cada programa
3. Cargar programa por separado
4. Esperar datos del sensor en el monitor serial

Opcional. Para alumnos avanzados, ejecutar el flow

Para quienes vayan a realizar el procedimiento con la Raspberry Pi

1. Actualizar Raspberry Pi
	- sudo apt-get update
	- sudo apt-get upgrade

2. Activar el I2C
	-sudo raspi-config
	-3 Interfaces
	-5 Activar I2C
	-Finish
	-Reiniciar sudo reboot

3. Comprobar python y pip. Verificar que esten instalados. Para ello, nos debe arrojar alguna version.
	-python --version
	-pip --version
	
4. Instalar la biblioteca del sensor mlx90614. La documentaci贸n de dicha biblioteca se encuentra en el enlace https://pypi.org/project/PyMLX90614/ Para instalar la biblioteca se requiere unicamente el siguiente comando
	-pip install pyMLX90614
	
5. Conexion del circuito

Sensor MLX90614		T-Clobber (Adaptador RPi)
5V----------------------5VO
GND---------------------GND
SDA---------------------SDA1
SCL---------------------SCL1

6. Crear un archivo llamado i2cread.py que contega el siguiente c贸digo

from smbus2 import SMBus
from mlx90614 import MLX90614

bus = SMBus(1)
sensor = MLX90614(bus, address=0x5A)
print sensor.get_amb_temp()
print sensor.get_obj_temp()
bus.close()

7. Correr el codigo de python
	-python i2cread.py
	
8. Para el MAX30100:

-Clonar el siguiente repositorio https://github.com/vrano714/max30102-tutorial-raspberrypi

-Crear un archivo llamado testmax30100.py

-Cargarle el siguiente c贸digo:

import max30102
import hrcalc

m = max30102.MAX30102()

# 100 samples are read and used for HR/SpO2 calculation in a single loop
while True:
    red, ir = m.read_sequential()
    print(hrcalc.calc_hr_and_spo2(ir, red))
    
-Ejecutar el programa creado con el siguiente comando
	-python testmax30100.py

Nota: opcional, realizar el procedimiento de raspberry pi con Java

https://edu.codigoiot.com/course/view.php?id=861
https://edu.codigoiot.com/course/view.php?id=805


